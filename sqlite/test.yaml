---
apiVersion: v1
kind: Namespace
metadata:
  name: n8n

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx
  namespace: n8n
data:
  default.conf: |+
    server {
        listen 8080 default_server;
        listen [::]:8080 default_server ipv6only=on;

        location / {
            proxy_pass http://localhost:5678;
            proxy_http_version 1.1;
            proxy_set_header Connection '';
            chunked_transfer_encoding off;
            proxy_buffering off;
            proxy_cache off;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
        }
    }

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: n8n
  namespace: n8n
spec:
  replicas: 1
  selector:
    matchLabels:
      name: n8n
  template:
    metadata:
      labels:
        name: n8n
    spec:
      containers:
        - name: nginx
          image: eu.gcr.io/topvine-co/nginx
          imagePullPolicy: Always
          ports:
            - containerPort: 80
          volumeMounts:
            - name: nginx
              mountPath: /etc/nginx/conf.d/default.conf
              subPath: default.conf
        - name: n8n
          image: docker.n8n.io/n8nio/n8n:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 5678
          env:
            - name: N8N_BASIC_AUTH_ACTIVE
              value: "true"
            - name: N8N_BASIC_AUTH_USER
              valueFrom:
                secretKeyRef:
                  name: n8n-basic-auth
                  key: user
            - name: N8N_BASIC_AUTH_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: n8n-basic-auth
                  key: password
            - name: N8N_SECURE_COOKIE
              value: "false"
            - name: VUE_APP_URL_BASE_API
              value: "http://n8n.tpv.k8s/"
            - name: WEBHOOK_TUNNEL_URL
              value: "http://n8n.tpv.k8s/"
            - name: DB_TYPE
              value: sqlite
            - name: DB_SQLITE_DATABASE
              value: /data/database.sqlite
          volumeMounts:
            - mountPath: /data
              name: n8n-data
      volumes:
        - name: nginx
          configMap:
            name: nginx
        - name: n8n-data
          persistentVolumeClaim:
            claimName: n8n-claim0

---
apiVersion: v1
kind: Service
metadata:
  name: n8n
  namespace: n8n
spec:
  ports:
    - name: http
      port: 80
      targetPort: 8080
  selector:
    name: n8n

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: n8n
  namespace: n8n
spec:
  rules:
    - host: n8n.tpv.k8s
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: n8n
                port:
                  number: 80